{"version":3,"sources":["components/AddCategory.js","services/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","URL_BASE_GIFS","encodeURI","fetch","response","json","data","results","gifs","map","id","name","status","url","image","gender","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","images","useFetchGifs","img","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"yLAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OAEI,sBAAMC,SAdW,SAACC,GAElBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAxBc,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,a,+BCTnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,0DAGsDC,UAAWH,IAHjE,SAKII,MAAOF,GALX,cAKbG,EALa,gBAMAA,EAASC,OANT,cAMbC,EANa,OAObC,EAAUD,EAAKC,QAEfC,EAAOD,EAAQE,KAAI,YAErB,MAAO,CACHC,GAH0D,EAAtCA,GAIpBC,KAJ0D,EAAlCA,KAKxBC,OAL0D,EAA5BA,OAM9BC,IAN0D,EAApBC,MAOtCC,OAP0D,EAAbA,WATlC,kBAqBZP,GArBY,4CAAH,sDCIPQ,EAAc,SAAC,GAAuB,IAArBN,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,KAAME,EAAU,EAAVA,IAEpC,OACI,sBAAKI,UAAU,OAAf,UACI,oBAAIA,UAAU,SAAd,SAAyBP,IACzB,qBAAKQ,IAAML,EAAMM,IAAMR,IACvB,4BAAKA,QCLJS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAEtB,ECJwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACP1B,EAASC,GACJ0B,MAAM,SAAAC,GACHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGtB,CAAEtB,IAEEuB,EDb0BK,CAAc5B,GAAlC2B,EAAb,EAAQpB,KAAae,EAArB,EAAqBA,QAErB,OACI,qCACI,6BAAMtB,IAEJsB,GAAW,iDAEb,qBAAKJ,UAAU,YAAf,SAEMS,EAAOjB,KAAK,SAAAmB,GAAG,OAEb,cAAC,EAAD,eAESA,GADAA,EAAIlB,aEhBpBmB,EAAe,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,EAExD,EAAoC7C,mBAAU6C,GAA9C,mBAAOC,EAAP,KAAmB/C,EAAnB,KAEA,OACI,qCACI,8BACI,+CAEJ,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ+C,EAAWtB,KAAI,SAAAV,GAAQ,OAEnB,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCdpCiC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ae5eac02.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories } ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        \n        setInputValue( e.target.value );\n\n    }\n\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 1 ) {\n            \n            setCategories( cats => [ inputValue, ...cats ] );\n            setInputValue('');\n\n        }\n    }\n\n    return (\n        \n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\" \n                value={inputValue}\n                onChange={ handleInputChange }/>\n\n        </form>\n    )\n}\n\nAddCategory.propTypes =  {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async( category ) => {\n\n\n    const URL_BASE_GIFS = `https://rickandmortyapi.com/api/character/?name=${encodeURI( category )}`;\n\n    const response = await fetch( URL_BASE_GIFS );\n    const data = await response.json();\n    const results = data.results;\n\n    const gifs = results.map(({ id, name, status, image, gender }) => {\n\n        return {\n            id: id,\n            name: name,\n            status: status,\n            url: image,\n            gender: gender\n        }\n\n    });\n\n    return gifs;\n}\n\nexport const getGifsId = async( id ) => {\n\n    const URL_BASE_GIFS_ID = `https://rickandmortyapi.com/api/character/${ id }`;\n\n    const response = await fetch( URL_BASE_GIFS_ID );\n    const data = await response.json();\n    const results = data.results;\n\n    const gifs = results.map(({ id, name, status, image, gender }) => {\n\n        return {\n            id: id,\n            name: name,\n            status: status,\n            url: image,\n            gender: gender\n        }\n\n    });\n\n    return gifs;\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport const GifGridItem = ({ id, name, url }) => {\n\n    return (\n        <div className=\"card\">\n            <h1 className=\"center\">{ id }</h1>\n            <img src={ url } alt={ name } />\n            <p>{ name }</p>\n        </div>\n    )\n}\n\nGifGridItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3>{ category }</h3>\n\n            { loading && <p>Loading.........</p> }\n\n            <div className=\"card-grid\">\n\n                { images.map( img => (\n\n                    <GifGridItem \n                        key={img.id}\n                        { ...img }>\n\n                    </GifGridItem>\n\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n    category: PropTypes.string\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../services/GetGifs';  \n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category )\n            .then( images => {\n                setState({\n                    data: images,\n                    loading: false\n                });\n            });\n    }, [ category ]);\n\n    return state;\n\n}\n\nexport const useFetchGifsId = ( id ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( id )\n            .then( images => {\n                setState({\n                    data: images,\n                    loading: false\n                });\n            });\n    }, [ id ]);\n\n    return state;\n\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = ({ defaultCategories = [] }) => {\n\n    const [categories, setCategories] = useState( defaultCategories );\n\n    return (\n        <>  \n            <div>\n                <h2>GifMortyApp</h2>\n            </div>\n            <AddCategory setCategories={ setCategories }></AddCategory>\n            <hr/>\n\n            <ol>\n                {\n                    categories.map(category => (\n\n                        <GifGrid \n                            key = { category }\n                            category = { category }\n                        />\n                        \n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}